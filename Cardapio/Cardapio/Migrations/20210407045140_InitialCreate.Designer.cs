// <auto-generated />
using System;
using CardapioService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CardapioService.Migrations
{
    [DbContext(typeof(CardapioServiceContext))]
    [Migration("20210407045140_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CardapioService.Model.Adicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemCardapioId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemCardapioId");

                    b.ToTable("Adicional");
                });

            modelBuilder.Entity("CardapioService.Model.Cardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cardapio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Nome = "Café da manhã",
                            Observacao = "Teste"
                        });
                });

            modelBuilder.Entity("CardapioService.Model.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("NomeCategoria")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("CardapioService.Model.ItemCardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("CardapioId")
                        .HasColumnType("integer");

                    b.Property<string>("NomeItem")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CardapioId");

                    b.ToTable("ItemCardapio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            CardapioId = 1,
                            NomeItem = "Ovos Mexidos",
                            Observacao = "Teste",
                            Valor = 10m
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            CardapioId = 1,
                            NomeItem = "Café",
                            Observacao = "Teste",
                            Valor = 10m
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            CardapioId = 1,
                            NomeItem = "Bolo de milho",
                            Observacao = "Teste",
                            Valor = 10m
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            CardapioId = 1,
                            NomeItem = "Baguete",
                            Observacao = "Teste",
                            Valor = 10m
                        });
                });

            modelBuilder.Entity("CardapioService.Model.Restaurante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Restaurante");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Nome = "Restaurante A",
                            Observacao = "Teste"
                        });
                });

            modelBuilder.Entity("CardapioService.Model.TipoAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("AdicionalId")
                        .HasColumnType("integer");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("NomeItem")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdicionalId");

                    b.ToTable("TipoAdicional");
                });

            modelBuilder.Entity("CardapioService.Model.Adicional", b =>
                {
                    b.HasOne("CardapioService.Model.ItemCardapio", "ItemCardapio")
                        .WithMany()
                        .HasForeignKey("ItemCardapioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCardapio");
                });

            modelBuilder.Entity("CardapioService.Model.ItemCardapio", b =>
                {
                    b.HasOne("CardapioService.Model.Cardapio", "Cardapio")
                        .WithMany("ItensCardapio")
                        .HasForeignKey("CardapioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cardapio");
                });

            modelBuilder.Entity("CardapioService.Model.TipoAdicional", b =>
                {
                    b.HasOne("CardapioService.Model.Adicional", null)
                        .WithMany("TiposAdicionais")
                        .HasForeignKey("AdicionalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CardapioService.Model.Adicional", b =>
                {
                    b.Navigation("TiposAdicionais");
                });

            modelBuilder.Entity("CardapioService.Model.Cardapio", b =>
                {
                    b.Navigation("ItensCardapio");
                });
#pragma warning restore 612, 618
        }
    }
}
