// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PedidoAPI.Data;

namespace PedidoAPI.Migrations
{
    [DbContext(typeof(PedidoContext))]
    partial class PedidoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PedidoAPI.Model.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid");

                    b.Property<int>("StatusItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("StatusId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("PedidoAPI.Model.Mesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("NumeroMesa")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("PedidoAPI.Model.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("Parcelas")
                        .HasColumnType("integer");

                    b.Property<int>("TipoPagamentoId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TipoPagamentoId1")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("TipoPagamentoId1");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("PedidoAPI.Model.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("MesaId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MesaId1")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid");

                    b.Property<int>("StatusPedidoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MesaId1");

                    b.HasIndex("StatusId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("PedidoAPI.Model.StatusItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StatusItem");
                });

            modelBuilder.Entity("PedidoAPI.Model.StatusPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StatusPedido");
                });

            modelBuilder.Entity("PedidoAPI.Model.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoPagamento");
                });

            modelBuilder.Entity("PedidoAPI.Model.ItemPedido", b =>
                {
                    b.HasOne("PedidoAPI.Model.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PedidoAPI.Model.StatusItem", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Status");
                });

            modelBuilder.Entity("PedidoAPI.Model.Pagamento", b =>
                {
                    b.HasOne("PedidoAPI.Model.TipoPagamento", "TipoPagamento")
                        .WithMany()
                        .HasForeignKey("TipoPagamentoId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TipoPagamento");
                });

            modelBuilder.Entity("PedidoAPI.Model.Pedido", b =>
                {
                    b.HasOne("PedidoAPI.Model.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PedidoAPI.Model.StatusPedido", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Mesa");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("PedidoAPI.Model.Pedido", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
